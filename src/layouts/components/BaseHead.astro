---
import "@fontsource/fira-sans";
import { SITE } from "@/site-config";
import "@/styles/global.css";
import { ViewTransitions } from "astro:transitions";

export interface Props {
    title?: string;
    author?: string;
    description?: string;
    ogImage?: string;
    canonicalURL?: string;
    publishedAt?: Date;
    updatedAt?: Date;
}
const {
    title = SITE.title,
    author = SITE.author,
    description = SITE.description,
    ogImage = SITE.ogImage,
    canonicalURL = new URL(Astro.url.pathname, Astro.site).href,
    publishedAt,
    updatedAt,
} = Astro.props;
---

<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<meta name="generator" content={Astro.generator} />

<title>{title}</title>
<meta name="title" content={title} />
{description && <meta name="description" content={description} />}
{author && <meta name="author" content={author} />}

<link rel="apple-touch-icon" sizes="180x180" href="/assets/lime.svg" />
<link rel="icon" type="image/svg" sizes="32x32" href="/favicon.svg" />
<link rel="shortcut icon" type="image/svg" sizes="16x16" href="/favicon.svg" />
<link rel="mask-icon" href="/favicon.svg" color="#5bbad5" />

<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="msapplication-TileColor" content="#da532c" />
<meta name="msapplication-config" content="/browserconfig.xml" />
<meta name="theme-color" content="#AAD37D" />

<!-- Open Graph Tags (Facebook) -->
<meta property="og:type" content="website" />
<meta property="og:title" content={`${title} | Lime`} />
{canonicalURL && <meta property="og:url" content={canonicalURL} />}
{description && <meta property="og:description" content={description} />}
{ogImage && <meta property="og:image" content={ogImage} />}

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:title" content={title} />
{canonicalURL && <meta property="twitter:url" content={canonicalURL} />}
{description && <meta property="twitter:description" content={description} />}
{ogImage && <meta property="twitter:image" content={ogImage} />}

{
    publishedAt && (
        <meta
            property="article:published_time"
            content={publishedAt.toISOString()}
        />
    )
}

{
    updatedAt && (
        <meta
            property="article:modified_time"
            content={updatedAt.toISOString()}
        />
    )
}

<meta name="theme-color" content="#AAD37D" />

<script is:inline>
    const theme = (() => {
        if (
            typeof localStorage !== "undefined" &&
            localStorage.getItem("theme")
        ) {
            return localStorage.getItem("theme");
        }
        if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
            return "dark";
        }
        return "light";
    })();

    if (theme === "light") {
        document.documentElement.classList.remove("dark");
    } else {
        document.documentElement.classList.add("dark");
    }
</script>

<ViewTransitions />